<!DOCTYPE html>
<html>
<head lang="ko">
    <meta charset="UTF-8">
    <title>Volume Rendering Cloud System</title>
    <link rel='stylesheet' href='/stylesheets/default.css' />
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="http://cdn.binaryjs.com/0/binary.js"></script>
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
</head>
<body>

<header class="template_header">
    <h1>Volume Stream</h1>
</header>

<section class="template_section">
    <article>
        <a href="/" class="default_a">Main</a>
        <a href="/volume" class="default_a">Volume List</a>

        <input type="file" id="fileinput" accept="image/*" capture="camera" />

        <div id="view_port" class="default_stream">

        </div>

        <div class="default_error">
        <% if( error != '') { %>
            <%=error%>
        <% }%>
        </div>
    </article>
</section>

<footer class="template_footer">
    <span>Copyright(c) Wong.Lee Francis.kim  All rights reserved</span>
</footer>
    <script type="text/javascript">
        var socket = io.connect('http://localhost:3000'); // Socket.io
        var client = new BinaryClient('ws://' + document.location.host); // Byte streaming
        var accessInfo = {
            volumeIndex : '<%=accessInfo.volumeIndex%>',
            userPn : '<%=accessInfo.userPn%>'
        };
        // ~ init room setting
        console.log('accessInfo: ',accessInfo);
        socket.emit('join', { room : accessInfo.volumeIndex } );

        socket.on('message', function(data){
            if(!data.success){
                console.log(data.error);
            }
        });

        client.on('stream', function(stream, meta){

            // collect stream data
            var parts = [];
            stream.on('data', function(data){
                parts.push(data);
            });

            // when finished, set it as the background image
            stream.on('end', function(){
                console.log(stream.id);
                var url = (window.URL || window.webkitURL).createObjectURL(new Blob(parts));
                document.getElementById('view_port').style.backgroundImage = 'url(' + url + ')';
                document.getElementById('view_port').style.backgroundRepeat = 'no-repeat';
            });
        });

        // listen for a file being chosen
        fileinput.addEventListener('change', function(event){
            var file = event.target.files[0];
            client.send(file);
        }, false);

    </script>
</body>
</html>
